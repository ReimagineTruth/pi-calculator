<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pi Fire Sale Chart</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"></link>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-900 text-white text-center">

    <h1 class="text-4xl font-bold mt-10">Pi Network Fire Sale Chart</h1>
    <div class="flex justify-center mt-10">
        <canvas id="piChart" class="max-w-full w-11/12 md:w-3/4 lg:w-1/2"></canvas>
    </div>

    <h1 class="text-4xl font-bold mt-10">Pi Network Rainbow Chart</h1>
    <div class="flex justify-center mt-10">
        <canvas id="piRainbowChart" class="max-w-full w-11/12 md:w-3/4 lg:w-1/2"></canvas>
    </div>

    <h1 class="text-4xl font-bold mt-10">Pi Network Blocks</h1>
    <div class="flex justify-center mt-10">
        <canvas id="piBlocksChart" class="max-w-full w-11/12 md:w-3/4 lg:w-1/2"></canvas>
    </div>

    <script>
        const piCtx = document.getElementById('piChart').getContext('2d');
        const piRainbowCtx = document.getElementById('piRainbowChart').getContext('2d');
        const piBlocksCtx = document.getElementById('piBlocksChart').getContext('2d');

        // Sample price data for Pi Network
        const piData = {
            labels: ['2024', '2025', '2026', '2027', '2028', '2029', '2030'],
            datasets: [
                {
                    label: 'Pi Price ($)',
                    data: [1, 5, 10, 50, 100, 314, 1000], // Adjust future price predictions
                    borderColor: 'gold',
                    backgroundColor: 'rgba(255, 215, 0, 0.2)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }
            ]
        };

        // Fire Sale Rainbow Zones
        const fireSaleZones = [
            { color: 'rgba(255, 0, 0, 0.3)', label: '🔥 Fire Sale (<$5)' },
            { color: 'rgba(255, 165, 0, 0.3)', label: '🟠 Still Cheap ($5-$10)' },
            { color: 'rgba(255, 255, 0, 0.3)', label: '🟡 Accumulate Zone ($10-$50)' },
            { color: 'rgba(0, 128, 0, 0.3)', label: '🟢 HODL Strong ($50-$100)' },
            { color: 'rgba(0, 0, 255, 0.3)', label: '🔵 Early Retirement ($100+)' }
        ];

        // Draw Pi Network Fire Sale Chart
        new Chart(piCtx, {
            type: 'line',
            data: piData,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true
                    },
                    annotation: {
                        annotations: fireSaleZones.map((zone, index) => ({
                            type: 'box',
                            drawTime: 'beforeDatasetsDraw',
                            yMin: index === 0 ? 0 : piData.datasets[0].data[index - 1],
                            yMax: piData.datasets[0].data[index],
                            backgroundColor: zone.color,
                            label: {
                                content: zone.label,
                                display: true,
                                position: 'center'
                            }
                        }))
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: { display: true, text: 'Pi Price ($)' }
                    },
                    x: {
                        title: { display: true, text: 'Year' }
                    }
                }
            }
        });

        // Sample price data for Pi Network Rainbow Chart
        const piRainbowData = {
            labels: ['2024', '2025', '2026', '2027', '2028', '2029', '2030'],
            datasets: [
                {
                    label: 'Pi Price ($)',
                    data: [1, 5, 10, 50, 100, 314, 1000], // Adjust future price predictions
                    borderColor: 'orange',
                    backgroundColor: 'rgba(255, 165, 0, 0.2)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }
            ]
        };

        // Pi Rainbow Zones
        const piRainbowZones = [
            { color: 'rgba(255, 0, 0, 0.3)', label: '🔥 Fire Sale (<$5)' },
            { color: 'rgba(255, 165, 0, 0.3)', label: '🟠 Still Cheap ($5-$10)' },
            { color: 'rgba(255, 255, 0, 0.3)', label: '🟡 Accumulate Zone ($10-$50)' },
            { color: 'rgba(0, 128, 0, 0.3)', label: '🟢 HODL Strong ($50-$100)' },
            { color: 'rgba(0, 0, 255, 0.3)', label: '🔵 Early Retirement ($100+)' }
        ];

        // Draw Pi Network Rainbow Chart
        new Chart(piRainbowCtx, {
            type: 'line',
            data: piRainbowData,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true
                    },
                    annotation: {
                        annotations: piRainbowZones.map((zone, index) => ({
                            type: 'box',
                            drawTime: 'beforeDatasetsDraw',
                            yMin: index === 0 ? 0 : piRainbowData.datasets[0].data[index - 1],
                            yMax: piRainbowData.datasets[0].data[index],
                            backgroundColor: zone.color,
                            label: {
                                content: zone.label,
                                display: true,
                                position: 'center'
                            }
                        }))
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: { display: true, text: 'Pi Price ($)' }
                    },
                    x: {
                        title: { display: true, text: 'Year' }
                    }
                }
            }
        });

        // Sample block data for Pi Network
        const piBlocksData = {
            labels: ['2024', '2025', '2026', '2027', '2028', '2029', '2030'],
            datasets: [
                {
                    label: 'Pi Blocks',
                    data: [1000, 5000, 10000, 50000, 100000, 314000, 1000000], // Adjust future block predictions
                    borderColor: 'purple',
                    backgroundColor: 'rgba(128, 0, 128, 0.2)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }
            ]
        };

        // Draw Pi Network Blocks Chart
        new Chart(piBlocksCtx, {
            type: 'line',
            data: piBlocksData,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: { display: true, text: 'Pi Blocks' }
                    },
                    x: {
                        title: { display: true, text: 'Year' }
                    }
                }
            }
        });
    </script>

</body>
</html>